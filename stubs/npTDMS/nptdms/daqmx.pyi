from _typeshed import Incomplete

from nptdms.base_segment import BaseDataReader, BaseSegmentObject

log: Incomplete
FORMAT_CHANGING_SCALER: int
DIGITAL_LINE_SCALER: int

class DaqmxDataReader(BaseDataReader): ...

def get_daqmx_chunk_size(ordered_objects): ...
def get_daqmx_final_chunk_lengths(ordered_objects, chunk_size_bytes): ...
def get_buffer_dimensions(ordered_objects): ...

class DaqmxSegmentObject(BaseSegmentObject):
    daqmx_metadata: Incomplete
    def __init__(self, path) -> None: ...
    data_type: Incomplete
    number_values: Incomplete
    def read_raw_data_index(self, f, raw_data_index_header, endianness) -> None: ...
    @property
    def scaler_data_types(self): ...

class DaqMxMetadata:
    scalers: Incomplete
    raw_data_widths: Incomplete
    def __init__(self, f, endianness, scaler_type, channel_data_type) -> None: ...

class DaqMxScaler:
    data_type: Incomplete
    def __init__(self, open_file, endianness) -> None: ...
    def byte_offset(self): ...
    def postprocess_data(self, data): ...

class DigitalLineScaler:
    data_type: Incomplete
    def __init__(self, open_file, endianness) -> None: ...
    def byte_offset(self): ...
    def postprocess_data(self, data): ...

DAQMX_TYPES: Incomplete
